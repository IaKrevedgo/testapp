# Глава 16 ФУНКЦИИ

def times(x, y):                                            # простая функция с двумя аргументами
    return x*y                                              # действие функции
print(times(2, 8))                                          # вывод на экран результатов при введенных двух аргументах

x = times(2, 8)                                             # можно записать результат в переменную и вызвать потом
print(x)
print(times('Ia', 4))                                       # вводим разные типы



def intersect (seq1, seq2):                                 # функция вывода общего из 2 последовательностей
    res = []                                                # изначально обнуляем последовательность
    for x in seq1:                                          # дял элементов из последовательности 1
        if x in seq2:                                       # если он же есть в последовательности 2
            res.append(x)                                   # добавляем в новый список
    return res                                              # результат - новй список

s1 = 'IaKrevedgo'                                           # задаем списки для сравнений
s2 = '@venger'
print(intersect(s1, s2))                                    # выводим результат работы функции      
print(intersect([1,2,3,4],(1,4,6)))                         # выбираем из разных типов




# Глава 17 ОСНОВЫ ОБЛАСТЕЙ ВИДИМОСТИ

# глобальная область вдимости
X = 99                                                      # имена X и func присваиваются в модуле: глобальные
def func (Y):                                               # имена Y и Z присваиваются в функции: локальные
    # локальная область видимости
    Z = X + Y                                               # имя X является глобальным
    return Z
print(func(1))                                              # имя func в модуле: result = 1000


X = 88                                                      # глобальная переменная
def fun():
    X = 99                                                  # локальная переменная
fun()
print(X)                                                    # выведет глобальную переменную

# то же самое только с global
X = 88                                                      # глобальная переменная
def fun2():
    global X
    X = 99                                                  # теперь тут обращение к глобальной переменной
fun2()
print(X)                                                    # выводит значение после функции
